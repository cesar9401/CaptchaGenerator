// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: captcha.flex

package com.cesar31.captchaweb.parser;

import com.cesar31.captchaweb.model.*;
import static com.cesar31.captchaweb.parser.CaptchaParserSym.*;
import java_cup.runtime.*;


// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class CaptchaLex implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700"+
    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00"+
    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
    "\1\u1d00\1\u1e00\2\u1f00\1\u2000\7\u1f00\1\u2100\1\u2200\1\u2300"+
    "\1\u1f00\1\u2400\1\u2500\2\u1f00\31\u0100\1\u2600\121\u0100\1\u2700"+
    "\4\u0100\1\u2800\1\u0100\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00"+
    "\1\u2e00\53\u0100\1\u2f00\41\u1f00\1\u0100\1\u3000\1\u3100\1\u0100"+
    "\1\u3200\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\1\u3900"+
    "\1\u3a00\1\u0100\1\u3b00\1\u3c00\1\u3d00\1\u3e00\1\u3f00\1\u4000"+
    "\1\u4100\1\u1f00\1\u4200\1\u4300\1\u4400\1\u4500\1\u4600\1\u4700"+
    "\1\u4800\1\u4900\1\u4a00\1\u4b00\1\u4c00\1\u4d00\1\u1f00\1\u4e00"+
    "\1\u4f00\1\u5000\1\u1f00\3\u0100\1\u5100\1\u5200\1\u5300\12\u1f00"+
    "\4\u0100\1\u5400\17\u1f00\2\u0100\1\u5500\41\u1f00\2\u0100\1\u5600"+
    "\1\u5700\2\u1f00\1\u5800\1\u5900\27\u0100\1\u5a00\2\u0100\1\u5b00"+
    "\45\u1f00\1\u0100\1\u5c00\1\u5d00\11\u1f00\1\u5e00\24\u1f00\1\u5f00"+
    "\1\u6000\1\u1f00\1\u6100\1\u6200\1\u6300\1\u6400\2\u1f00\1\u6500"+
    "\5\u1f00\1\u6600\1\u6700\1\u6800\5\u1f00\1\u6900\1\u6a00\4\u1f00"+
    "\1\u6b00\2\u1f00\1\u6c00\16\u1f00\246\u0100\1\u6d00\20\u0100\1\u6e00"+
    "\1\u6f00\25\u0100\1\u7000\34\u0100\1\u7100\14\u1f00\2\u0100\1\u7200"+
    "\u0b06\u1f00\1\u2700\u02fe\u1f00";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\1\1\4\22\0\1\1"+
    "\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
    "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24"+
    "\1\25\10\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54"+
    "\1\55\1\47\1\56\1\57\1\60\1\61\1\62\1\63"+
    "\1\64\1\65\1\47\1\66\1\34\1\67\1\34\1\70"+
    "\1\0\1\71\1\72\1\73\1\74\1\75\1\76\1\77"+
    "\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107"+
    "\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117"+
    "\1\120\1\121\1\122\1\123\1\124\1\125\7\0\1\3"+
    "\32\0\1\3\1\34\10\0\1\126\12\0\1\126\4\0"+
    "\1\126\4\0\1\34\27\126\1\0\37\126\1\0\u01ca\126"+
    "\4\0\14\126\16\0\5\126\7\0\1\126\1\0\1\126"+
    "\21\0\165\126\1\0\2\126\2\0\4\126\1\0\1\126"+
    "\6\0\1\126\1\0\3\126\1\0\1\126\1\0\24\126"+
    "\1\0\123\126\1\0\213\126\1\0\255\126\1\0\46\126"+
    "\2\0\1\126\6\0\51\126\10\0\55\126\1\0\1\126"+
    "\1\0\2\126\1\0\2\126\1\0\1\126\10\0\33\126"+
    "\4\0\4\126\35\0\13\126\5\0\100\126\12\127\4\0"+
    "\146\126\1\0\10\126\2\0\12\126\1\0\6\126\12\127"+
    "\3\126\2\0\1\126\20\0\73\126\2\0\145\126\16\0"+
    "\12\127\54\126\4\0\1\126\2\0\1\126\2\0\56\126"+
    "\22\0\34\126\4\0\13\126\65\0\25\126\1\0\10\126"+
    "\25\0\17\126\1\0\201\126\2\0\12\127\1\0\23\126"+
    "\1\0\10\126\2\0\2\126\2\0\26\126\1\0\7\126"+
    "\1\0\1\126\3\0\4\126\2\0\11\126\2\0\2\126"+
    "\2\0\4\126\10\0\1\126\4\0\2\126\1\0\5\126"+
    "\2\0\12\127\2\126\12\0\1\126\1\0\1\126\2\0"+
    "\3\126\1\0\6\126\4\0\2\126\2\0\26\126\1\0"+
    "\7\126\1\0\2\126\1\0\2\126\1\0\2\126\2\0"+
    "\1\126\1\0\5\126\4\0\2\126\2\0\3\126\3\0"+
    "\1\126\7\0\4\126\1\0\1\126\7\0\12\127\6\126"+
    "\13\0\3\126\1\0\11\126\1\0\3\126\1\0\26\126"+
    "\1\0\7\126\1\0\2\126\1\0\5\126\2\0\12\126"+
    "\1\0\3\126\1\0\3\126\2\0\1\126\17\0\4\126"+
    "\2\0\12\127\11\0\7\126\1\0\3\126\1\0\10\126"+
    "\2\0\2\126\2\0\26\126\1\0\7\126\1\0\2\126"+
    "\1\0\5\126\2\0\11\126\2\0\2\126\2\0\3\126"+
    "\10\0\2\126\4\0\2\126\1\0\5\126\2\0\12\127"+
    "\1\0\1\126\20\0\2\126\1\0\6\126\3\0\3\126"+
    "\1\0\4\126\3\0\2\126\1\0\1\126\1\0\2\126"+
    "\3\0\2\126\3\0\3\126\3\0\14\126\4\0\5\126"+
    "\3\0\3\126\1\0\4\126\2\0\1\126\6\0\1\126"+
    "\16\0\12\127\20\0\15\126\1\0\3\126\1\0\27\126"+
    "\1\0\20\126\3\0\10\126\1\0\3\126\1\0\4\126"+
    "\7\0\2\126\1\0\3\126\5\0\4\126\2\0\12\127"+
    "\20\0\4\126\1\0\10\126\1\0\3\126\1\0\27\126"+
    "\1\0\12\126\1\0\5\126\2\0\11\126\1\0\3\126"+
    "\1\0\4\126\7\0\2\126\7\0\1\126\1\0\4\126"+
    "\2\0\12\127\1\0\2\126\15\0\4\126\1\0\10\126"+
    "\1\0\3\126\1\0\63\126\1\0\3\126\1\0\5\126"+
    "\5\0\4\126\7\0\5\126\2\0\12\127\12\0\6\126"+
    "\2\0\2\126\1\0\22\126\3\0\30\126\1\0\11\126"+
    "\1\0\1\126\2\0\7\126\3\0\1\126\4\0\6\126"+
    "\1\0\1\126\1\0\10\126\6\0\12\127\2\0\2\126"+
    "\15\0\72\126\5\0\17\126\1\0\12\127\47\0\2\126"+
    "\1\0\1\126\1\0\5\126\1\0\30\126\1\0\1\126"+
    "\1\0\27\126\2\0\5\126\1\0\1\126\1\0\6\126"+
    "\2\0\12\127\2\0\4\126\40\0\1\126\27\0\2\126"+
    "\6\0\12\127\13\0\1\126\1\0\1\126\1\0\1\126"+
    "\4\0\12\126\1\0\44\126\4\0\24\126\1\0\22\126"+
    "\1\0\44\126\11\0\1\126\71\0\100\126\12\127\6\0"+
    "\100\126\12\127\4\126\2\0\46\126\1\0\1\126\5\0"+
    "\1\126\2\0\53\126\1\0\115\126\1\0\4\126\2\0"+
    "\7\126\1\0\1\126\1\0\4\126\2\0\51\126\1\0"+
    "\4\126\2\0\41\126\1\0\4\126\2\0\7\126\1\0"+
    "\1\126\1\0\4\126\2\0\17\126\1\0\71\126\1\0"+
    "\4\126\2\0\103\126\2\0\3\126\40\0\20\126\20\0"+
    "\126\126\2\0\6\126\3\0\u016c\126\2\0\21\126\1\3"+
    "\32\126\5\0\113\126\3\0\13\126\7\0\15\126\1\0"+
    "\7\126\13\0\25\126\13\0\24\126\14\0\15\126\1\0"+
    "\3\126\1\0\2\126\14\0\124\126\3\0\1\126\4\0"+
    "\2\126\2\0\12\127\41\0\3\126\2\0\12\127\6\0"+
    "\131\126\7\0\53\126\5\0\106\126\12\0\37\126\1\0"+
    "\14\126\4\0\14\126\12\0\12\127\36\126\2\0\5\126"+
    "\13\0\54\126\4\0\32\126\6\0\12\127\46\0\34\126"+
    "\4\0\77\126\1\0\35\126\2\0\1\126\12\127\6\0"+
    "\12\127\15\0\1\126\10\0\17\126\101\0\114\126\4\0"+
    "\12\127\21\0\11\126\14\0\60\126\12\127\72\126\14\0"+
    "\70\126\10\0\12\127\3\0\3\126\12\127\44\126\2\0"+
    "\11\126\7\0\53\126\2\0\3\126\20\0\3\126\1\0"+
    "\47\126\5\0\372\126\1\0\33\126\2\0\6\126\2\0"+
    "\46\126\2\0\6\126\2\0\10\126\1\0\1\126\1\0"+
    "\1\126\1\0\1\126\1\0\37\126\2\0\65\126\1\0"+
    "\7\126\1\0\1\126\3\0\3\126\1\0\7\126\3\0"+
    "\4\126\2\0\6\126\4\0\15\126\5\0\3\126\1\0"+
    "\7\126\3\0\13\3\35\0\2\3\5\0\1\3\17\0"+
    "\2\126\23\0\1\126\12\0\1\3\21\0\1\126\15\0"+
    "\1\126\20\0\15\126\63\0\41\126\21\0\1\126\4\0"+
    "\1\126\2\0\12\126\1\0\1\126\3\0\5\126\6\0"+
    "\1\126\1\0\1\126\1\0\1\126\1\0\4\126\1\0"+
    "\13\126\2\0\4\126\5\0\5\126\4\0\1\126\21\0"+
    "\51\126\u022d\0\64\126\26\0\57\126\1\0\57\126\1\0"+
    "\205\126\6\0\11\126\14\0\46\126\1\0\1\126\5\0"+
    "\1\126\2\0\70\126\7\0\1\126\17\0\30\126\11\0"+
    "\7\126\1\0\7\126\1\0\7\126\1\0\7\126\1\0"+
    "\7\126\1\0\7\126\1\0\7\126\1\0\7\126\1\0"+
    "\40\126\57\0\1\126\320\0\1\3\4\0\3\126\31\0"+
    "\17\126\1\0\5\126\2\0\5\126\4\0\126\126\2\0"+
    "\2\126\2\0\3\126\1\0\132\126\1\0\4\126\5\0"+
    "\53\126\1\0\136\126\21\0\33\126\65\0\306\126\112\0"+
    "\360\126\20\0\215\126\103\0\56\126\2\0\15\126\3\0"+
    "\20\126\12\127\2\126\24\0\63\126\1\0\12\126\1\0"+
    "\163\126\45\0\11\126\2\0\147\126\2\0\65\126\2\0"+
    "\5\126\60\0\61\126\30\0\64\126\14\0\106\126\12\0"+
    "\12\127\6\0\30\126\3\0\1\126\1\0\3\126\12\127"+
    "\44\126\2\0\44\126\14\0\35\126\3\0\101\126\16\0"+
    "\1\126\12\127\6\0\20\126\12\127\5\126\1\0\67\126"+
    "\11\0\16\126\2\0\12\127\6\0\27\126\3\0\111\126"+
    "\30\0\3\126\2\0\20\126\2\0\5\126\12\0\6\126"+
    "\2\0\6\126\2\0\6\126\11\0\7\126\1\0\7\126"+
    "\1\0\53\126\1\0\14\126\10\0\173\126\1\0\2\126"+
    "\2\0\12\127\6\0\244\126\14\0\27\126\4\0\61\126"+
    "\4\0\156\126\2\0\152\126\46\0\7\126\14\0\5\126"+
    "\5\0\14\126\1\0\15\126\1\0\5\126\1\0\1\126"+
    "\1\0\2\126\1\0\2\126\1\0\154\126\41\0\153\126"+
    "\22\0\100\126\2\0\66\126\50\0\14\126\4\0\20\126"+
    "\20\0\20\126\3\0\2\126\30\0\3\126\40\0\5\126"+
    "\1\0\207\126\23\0\12\127\7\0\32\126\4\0\1\126"+
    "\1\0\32\126\13\0\131\126\3\0\6\126\2\0\6\126"+
    "\2\0\6\126\2\0\3\126\43\0\14\126\1\0\32\126"+
    "\1\0\23\126\1\0\2\126\1\0\17\126\2\0\16\126"+
    "\42\0\173\126\105\0\65\126\210\0\1\126\202\0\35\126"+
    "\3\0\61\126\17\0\1\126\37\0\40\126\15\0\36\126"+
    "\5\0\53\126\5\0\36\126\2\0\44\126\4\0\10\126"+
    "\1\0\5\126\52\0\236\126\2\0\12\127\6\0\44\126"+
    "\4\0\44\126\4\0\50\126\10\0\64\126\234\0\67\126"+
    "\11\0\26\126\12\0\10\126\230\0\6\126\2\0\1\126"+
    "\1\0\54\126\1\0\2\126\3\0\1\126\2\0\27\126"+
    "\12\0\27\126\11\0\37\126\101\0\23\126\1\0\2\126"+
    "\12\0\26\126\12\0\32\126\106\0\70\126\6\0\2\126"+
    "\100\0\4\126\1\0\2\126\5\0\10\126\1\0\3\126"+
    "\1\0\35\126\2\0\3\126\4\0\1\126\40\0\35\126"+
    "\3\0\35\126\43\0\10\126\1\0\36\126\31\0\66\126"+
    "\12\0\26\126\12\0\23\126\15\0\22\126\156\0\111\126"+
    "\67\0\63\126\15\0\63\126\15\0\50\126\10\0\12\127"+
    "\306\0\35\126\12\0\1\126\10\0\41\126\217\0\27\126"+
    "\11\0\107\126\37\0\12\127\17\0\74\126\25\0\31\126"+
    "\7\0\12\127\6\0\65\126\1\0\12\127\4\0\3\126"+
    "\11\0\44\126\2\0\1\126\11\0\105\126\4\0\4\126"+
    "\3\0\12\127\1\126\1\0\1\126\43\0\22\126\1\0"+
    "\45\126\6\0\1\126\101\0\7\126\1\0\1\126\1\0"+
    "\4\126\1\0\17\126\1\0\12\126\7\0\73\126\5\0"+
    "\12\127\6\0\4\126\1\0\10\126\2\0\2\126\2\0"+
    "\26\126\1\0\7\126\1\0\2\126\1\0\5\126\1\0"+
    "\12\126\2\0\2\126\2\0\3\126\2\0\1\126\6\0"+
    "\1\126\5\0\7\126\2\0\7\126\3\0\5\126\213\0"+
    "\113\126\5\0\12\127\4\0\2\126\40\0\106\126\1\0"+
    "\1\126\10\0\12\127\246\0\66\126\2\0\11\126\27\0"+
    "\6\126\42\0\101\126\3\0\1\126\13\0\12\127\46\0"+
    "\71\126\7\0\12\127\66\0\33\126\2\0\17\126\4\0"+
    "\12\127\306\0\73\126\145\0\100\126\12\127\25\0\1\126"+
    "\240\0\10\126\2\0\56\126\2\0\10\126\1\0\2\126"+
    "\33\0\77\126\10\0\1\126\10\0\112\126\3\0\1\126"+
    "\42\0\71\126\7\0\11\126\1\0\55\126\1\0\11\126"+
    "\17\0\12\127\30\0\36\126\2\0\26\126\1\0\16\126"+
    "\111\0\7\126\1\0\2\126\1\0\54\126\3\0\1\126"+
    "\1\0\2\126\1\0\11\126\10\0\12\127\6\0\6\126"+
    "\1\0\2\126\1\0\45\126\1\0\2\126\1\0\6\126"+
    "\7\0\12\127\u0136\0\27\126\11\0\232\126\146\0\157\126"+
    "\21\0\304\126\274\0\57\126\321\0\107\126\271\0\71\126"+
    "\7\0\37\126\1\0\12\127\146\0\36\126\2\0\5\126"+
    "\13\0\67\126\11\0\4\126\14\0\12\127\11\0\25\126"+
    "\5\0\23\126\260\0\100\126\200\0\113\126\4\0\71\126"+
    "\7\0\21\126\100\0\2\126\1\0\1\126\34\0\370\126"+
    "\10\0\363\126\15\0\37\126\61\0\3\126\21\0\4\126"+
    "\10\0\u018c\126\4\0\153\126\5\0\15\126\3\0\11\126"+
    "\7\0\12\126\3\0\2\126\306\0\5\126\3\0\6\126"+
    "\10\0\10\126\2\0\7\126\36\0\4\126\224\0\3\126"+
    "\273\0\125\126\1\0\107\126\1\0\2\126\2\0\1\126"+
    "\2\0\2\126\2\0\4\126\1\0\14\126\1\0\1\126"+
    "\1\0\7\126\1\0\101\126\1\0\4\126\2\0\10\126"+
    "\1\0\7\126\1\0\34\126\1\0\4\126\1\0\5\126"+
    "\1\0\1\126\3\0\7\126\1\0\u0154\126\2\0\31\126"+
    "\1\0\31\126\1\0\37\126\1\0\31\126\1\0\37\126"+
    "\1\0\31\126\1\0\37\126\1\0\31\126\1\0\37\126"+
    "\1\0\31\126\1\0\10\126\2\0\62\127\67\126\4\0"+
    "\62\126\10\0\1\126\16\0\1\126\26\0\5\126\1\0"+
    "\17\126\120\0\7\126\1\0\21\126\2\0\7\126\1\0"+
    "\2\126\1\0\5\126\325\0\55\126\3\0\16\126\2\0"+
    "\12\127\4\0\1\126\u0171\0\60\126\12\127\6\0\305\126"+
    "\13\0\7\126\51\0\114\126\4\0\12\127\246\0\4\126"+
    "\1\0\33\126\1\0\2\126\1\0\1\126\2\0\1\126"+
    "\1\0\12\126\1\0\4\126\1\0\1\126\1\0\1\126"+
    "\6\0\1\126\4\0\1\126\1\0\1\126\1\0\1\126"+
    "\1\0\3\126\1\0\2\126\1\0\1\126\2\0\1\126"+
    "\1\0\1\126\1\0\1\126\1\0\1\126\1\0\1\126"+
    "\1\0\2\126\1\0\1\126\2\0\4\126\1\0\7\126"+
    "\1\0\4\126\1\0\4\126\1\0\1\126\1\0\12\126"+
    "\1\0\21\126\5\0\3\126\1\0\5\126\1\0\21\126"+
    "\164\0\32\126\6\0\32\126\6\0\32\126\166\0\327\126"+
    "\51\0\65\126\13\0\336\126\2\0\u0182\126\16\0\u0131\126"+
    "\37\0\36\126\342\0";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[29440];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\2\2\1\3\3\4\1\5\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\2\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\1\16\23\1\24\1\25\16\23"+
    "\1\26\1\1\1\27\1\2\1\30\1\0\1\31\3\4"+
    "\1\0\30\4\1\32\2\0\1\4\1\0\1\33\1\34"+
    "\1\35\1\0\11\23\1\36\24\23\1\37\12\23\1\40"+
    "\1\31\1\4\2\41\1\42\1\4\1\0\36\4\1\43"+
    "\1\0\1\44\2\0\1\23\1\45\10\23\1\46\4\23"+
    "\1\47\15\23\1\50\17\23\1\51\5\23\1\4\1\52"+
    "\1\0\36\4\1\53\2\0\3\23\1\54\3\23\1\55"+
    "\12\23\1\56\1\57\1\60\1\23\1\61\11\23\1\62"+
    "\3\23\1\63\2\23\1\64\5\23\1\65\1\23\1\66"+
    "\1\23\1\67\2\23\1\70\1\71\1\23\1\4\1\72"+
    "\1\73\7\4\1\74\11\4\1\75\4\4\2\0\4\23"+
    "\1\76\2\23\1\77\23\23\1\100\2\23\1\101\1\102"+
    "\1\23\1\103\1\0\5\23\1\0\1\104\10\4\1\0"+
    "\2\4\1\105\1\4\1\0\1\4\1\106\1\4\2\0"+
    "\2\23\1\107\1\23\1\110\1\111\1\23\1\112\3\23"+
    "\1\113\2\23\1\114\1\115\6\23\1\116\5\23\2\0"+
    "\1\23\1\117\2\23\1\120\1\0\1\4\1\121\2\4"+
    "\1\0\1\4\1\0\1\122\3\23\1\123\4\23\1\124"+
    "\3\23\1\125\2\23\1\126\2\23\1\127\1\130\2\0"+
    "\1\23\1\131\1\132\1\0\2\4\2\0\2\23\1\133"+
    "\1\134\1\23\1\135\5\23\1\136\2\23\2\0\1\23"+
    "\3\0\7\23\1\137\1\140\1\23\1\0\1\141\1\23"+
    "\3\0\1\142\2\23\1\143\1\23\1\144\1\23\1\145"+
    "\1\0\1\23\1\146\2\0\1\23\1\147\2\23\1\150"+
    "\1\23\1\0\1\121\1\23\1\151\2\23\1\152\1\23"+
    "\1\153\1\23\1\0\1\23\1\154\3\23\1\155";

  private static int [] zzUnpackAction() {
    int [] result = new int[558];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\130\0\130\0\260\0\u0108\0\u0160\0\u01b8\0\u0210"+
    "\0\u0268\0\130\0\130\0\130\0\130\0\130\0\130\0\130"+
    "\0\u02c0\0\u0318\0\130\0\130\0\u0370\0\u03c8\0\u0420\0\u0478"+
    "\0\u04d0\0\u0528\0\u0580\0\u05d8\0\u0630\0\u0688\0\u06e0\0\u0738"+
    "\0\u0790\0\u07e8\0\u0840\0\u0898\0\u08f0\0\u0948\0\130\0\130"+
    "\0\u09a0\0\u09f8\0\u0a50\0\u0aa8\0\u0b00\0\u0b58\0\u0bb0\0\u0c08"+
    "\0\u0c60\0\u0cb8\0\u0d10\0\u0d68\0\u0dc0\0\u0e18\0\130\0\u0e70"+
    "\0\130\0\u0ec8\0\130\0\u0f20\0\u01b8\0\u0f78\0\u0fd0\0\u1028"+
    "\0\u1080\0\u10d8\0\u1130\0\u1188\0\u11e0\0\u1238\0\u1290\0\u12e8"+
    "\0\u1340\0\u1398\0\u13f0\0\u1448\0\u14a0\0\u14f8\0\u1550\0\u15a8"+
    "\0\u1600\0\u1658\0\u16b0\0\u1708\0\u1760\0\u17b8\0\u1810\0\u1868"+
    "\0\u18c0\0\u01b8\0\u1918\0\u1970\0\u19c8\0\u1a20\0\130\0\130"+
    "\0\130\0\u1a78\0\u1ad0\0\u1b28\0\u1b80\0\u1bd8\0\u1c30\0\u1c88"+
    "\0\u1ce0\0\u1d38\0\u1d90\0\u0528\0\u1de8\0\u1e40\0\u1e98\0\u1ef0"+
    "\0\u1f48\0\u1fa0\0\u1ff8\0\u2050\0\u20a8\0\u2100\0\u2158\0\u21b0"+
    "\0\u2208\0\u2260\0\u22b8\0\u2310\0\u2368\0\u23c0\0\u2418\0\u2470"+
    "\0\u0528\0\u24c8\0\u2520\0\u2578\0\u25d0\0\u2628\0\u2680\0\u26d8"+
    "\0\u2730\0\u2788\0\u27e0\0\130\0\130\0\u2838\0\u01b8\0\130"+
    "\0\u01b8\0\u2890\0\u28e8\0\u2940\0\u2998\0\u29f0\0\u2a48\0\u2aa0"+
    "\0\u2af8\0\u2b50\0\u2ba8\0\u2c00\0\u2c58\0\u2cb0\0\u2d08\0\u2d60"+
    "\0\u2db8\0\u2e10\0\u2e68\0\u2ec0\0\u2f18\0\u2f70\0\u2fc8\0\u3020"+
    "\0\u3078\0\u30d0\0\u3128\0\u3180\0\u31d8\0\u3230\0\u3288\0\u32e0"+
    "\0\u3338\0\130\0\u3390\0\u19c8\0\u33e8\0\u3440\0\u3498\0\u0528"+
    "\0\u34f0\0\u3548\0\u35a0\0\u35f8\0\u3650\0\u36a8\0\u3700\0\u3758"+
    "\0\u0528\0\u37b0\0\u3808\0\u3860\0\u38b8\0\u0528\0\u3910\0\u3968"+
    "\0\u39c0\0\u3a18\0\u3a70\0\u3ac8\0\u3b20\0\u3b78\0\u3bd0\0\u3c28"+
    "\0\u3c80\0\u3cd8\0\u3d30\0\u0528\0\u3d88\0\u3de0\0\u3e38\0\u3e90"+
    "\0\u3ee8\0\u3f40\0\u3f98\0\u3ff0\0\u4048\0\u40a0\0\u40f8\0\u4150"+
    "\0\u41a8\0\u4200\0\u4258\0\u0528\0\u42b0\0\u4308\0\u4360\0\u43b8"+
    "\0\u4410\0\u4468\0\u01b8\0\u44c0\0\u4518\0\u4570\0\u45c8\0\u4620"+
    "\0\u4678\0\u46d0\0\u4728\0\u4780\0\u47d8\0\u4830\0\u4888\0\u48e0"+
    "\0\u4938\0\u4990\0\u49e8\0\u4a40\0\u4a98\0\u4af0\0\u4b48\0\u4ba0"+
    "\0\u4bf8\0\u4c50\0\u4ca8\0\u4d00\0\u4d58\0\u4db0\0\u4e08\0\u4e60"+
    "\0\u4eb8\0\u4f10\0\130\0\u4f68\0\u4fc0\0\u5018\0\u5070\0\u50c8"+
    "\0\u0528\0\u5120\0\u5178\0\u51d0\0\u0528\0\u5228\0\u5280\0\u52d8"+
    "\0\u5330\0\u5388\0\u53e0\0\u5438\0\u5490\0\u54e8\0\u5540\0\u0528"+
    "\0\u0528\0\u0528\0\u5598\0\u0528\0\u55f0\0\u5648\0\u56a0\0\u56f8"+
    "\0\u5750\0\u57a8\0\u5800\0\u5858\0\u58b0\0\u5908\0\u5960\0\u59b8"+
    "\0\u5a10\0\u0528\0\u5a68\0\u5ac0\0\u0528\0\u5b18\0\u5b70\0\u5bc8"+
    "\0\u5c20\0\u5c78\0\u0528\0\u5cd0\0\u0528\0\u5d28\0\u0528\0\u5d80"+
    "\0\u5dd8\0\u0528\0\u0528\0\u5e30\0\u5e88\0\130\0\u01b8\0\u5ee0"+
    "\0\u5f38\0\u5f90\0\u5fe8\0\u6040\0\u6098\0\u60f0\0\u01b8\0\u6148"+
    "\0\u61a0\0\u61f8\0\u6250\0\u62a8\0\u6300\0\u6358\0\u63b0\0\u6408"+
    "\0\u01b8\0\u6460\0\u64b8\0\u6510\0\u6568\0\u65c0\0\u6618\0\u6670"+
    "\0\u66c8\0\u6720\0\u6778\0\u0528\0\u67d0\0\u6828\0\u0528\0\u6880"+
    "\0\u68d8\0\u6930\0\u6988\0\u69e0\0\u6a38\0\u6a90\0\u6ae8\0\u6b40"+
    "\0\u6b98\0\u6bf0\0\u6c48\0\u6ca0\0\u6cf8\0\u6d50\0\u6da8\0\u6e00"+
    "\0\u6e58\0\u6eb0\0\u0528\0\u6f08\0\u6f60\0\u0528\0\u0528\0\u6fb8"+
    "\0\u0528\0\u7010\0\u7068\0\u70c0\0\u7118\0\u7170\0\u71c8\0\u7220"+
    "\0\u0528\0\u7278\0\u72d0\0\u7328\0\u7380\0\u73d8\0\u7430\0\u7488"+
    "\0\u74e0\0\u7538\0\u7590\0\u75e8\0\u01b8\0\u7640\0\u7698\0\u76f0"+
    "\0\u01b8\0\u7748\0\u77a0\0\u77f8\0\u7850\0\u78a8\0\u0528\0\u7900"+
    "\0\u0528\0\u0528\0\u7958\0\u0528\0\u79b0\0\u7a08\0\u7a60\0\u0528"+
    "\0\u7ab8\0\u7b10\0\u0528\0\u0528\0\u7b68\0\u7bc0\0\u7c18\0\u7c70"+
    "\0\u7cc8\0\u7d20\0\u0528\0\u7d78\0\u7dd0\0\u7e28\0\u7e80\0\u7ed8"+
    "\0\u7f30\0\u7f88\0\u7fe0\0\u0528\0\u8038\0\u8090\0\u0528\0\u80e8"+
    "\0\u8140\0\u01b8\0\u8198\0\u81f0\0\u8248\0\u82a0\0\u82f8\0\130"+
    "\0\u8350\0\u83a8\0\u8400\0\u0528\0\u8458\0\u84b0\0\u8508\0\u8560"+
    "\0\u0528\0\u85b8\0\u8610\0\u8668\0\u0528\0\u86c0\0\u8718\0\u0528"+
    "\0\u8770\0\u87c8\0\u0528\0\u0528\0\u8820\0\u8878\0\u88d0\0\u0528"+
    "\0\u0528\0\u8928\0\u8980\0\u89d8\0\u8a30\0\u8a88\0\u8ae0\0\u8b38"+
    "\0\u0528\0\u0528\0\u8b90\0\u0528\0\u8be8\0\u8c40\0\u8c98\0\u8cf0"+
    "\0\u8d48\0\u0528\0\u8da0\0\u8df8\0\u8e50\0\u8ea8\0\u8f00\0\u8f58"+
    "\0\u8fb0\0\u9008\0\u9060\0\u90b8\0\u9110\0\u9168\0\u91c0\0\u9218"+
    "\0\u9270\0\u8d48\0\u0528\0\u92c8\0\u9320\0\130\0\u9378\0\u93d0"+
    "\0\u9428\0\u9480\0\u0528\0\u94d8\0\u9530\0\u0528\0\u9588\0\u0528"+
    "\0\u95e0\0\u0528\0\u9638\0\u9690\0\130\0\u96e8\0\u9740\0\u9798"+
    "\0\u0528\0\u97f0\0\u9848\0\130\0\u98a0\0\u98f8\0\130\0\u9950"+
    "\0\u0528\0\u99a8\0\u9a00\0\u9a58\0\u9ab0\0\u0528\0\u9b08\0\u9a58"+
    "\0\u9b60\0\u0528\0\u9bb8\0\u9c10\0\u9c68\0\u0528";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[558];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\2\1\4\1\5\1\6\3\7\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\7"+
    "\1\20\1\21\2\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\7\1\30\1\31\1\32\1\33\1\34\1\35\2\32"+
    "\1\36\1\37\2\32\1\40\1\32\1\41\1\42\1\43"+
    "\1\44\1\32\1\45\2\32\1\46\2\32\1\47\1\50"+
    "\1\7\1\51\1\52\1\53\1\54\1\32\1\55\1\56"+
    "\1\57\1\60\4\32\1\61\1\62\2\32\1\63\1\64"+
    "\1\65\2\32\1\66\3\32\1\67\1\70\1\71\2\7"+
    "\132\0\1\3\132\0\1\72\24\0\1\73\75\0\4\74"+
    "\1\0\1\74\1\75\1\76\1\77\2\100\6\74\1\101"+
    "\1\100\1\74\1\102\2\103\5\74\1\100\1\74\1\104"+
    "\1\105\1\106\3\105\1\107\15\105\1\110\3\105\2\74"+
    "\1\105\1\111\1\112\1\113\2\105\1\114\1\115\1\116"+
    "\1\105\1\117\1\105\1\120\1\121\1\122\1\123\1\124"+
    "\1\105\1\125\1\126\1\127\2\105\1\130\1\105\1\131"+
    "\1\105\3\74\2\105\6\0\5\7\7\0\1\7\1\0"+
    "\3\7\5\0\1\7\1\0\30\7\2\0\33\7\3\0"+
    "\2\7\6\0\4\7\1\132\7\0\1\7\1\0\3\7"+
    "\5\0\1\7\1\0\30\7\2\0\33\7\3\0\2\7"+
    "\2\133\1\0\1\133\1\0\3\133\1\134\2\133\1\0"+
    "\5\133\1\134\2\133\3\134\7\133\30\134\2\133\33\134"+
    "\3\133\2\134\6\0\5\7\7\0\1\135\1\0\3\7"+
    "\5\0\1\7\1\0\30\7\2\0\33\7\3\0\2\7"+
    "\6\0\5\7\7\0\1\135\1\0\3\22\5\0\1\7"+
    "\1\0\30\7\2\0\33\7\3\0\2\7\5\0\1\136"+
    "\24\0\1\137\127\0\1\140\127\0\1\141\174\0\1\142"+
    "\36\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\13\32\1\143\5\32\1\144\6\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\1\145\27\32\2\0\1\146\32\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\4\32\1\147\23\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\13\32\1\150\1\32\1\151\10\32\1\152\1\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\23\32\1\153\4\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\5\32\1\154\7\32"+
    "\1\155\12\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\4\32"+
    "\1\156\23\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\23\32"+
    "\1\157\4\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\15\32"+
    "\1\160\12\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\20\32"+
    "\1\161\7\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\4\32"+
    "\1\162\23\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\7\32"+
    "\1\163\20\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\7\32"+
    "\1\164\20\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\14\32\1\165\16\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\1\32\1\166\15\32\1\167\13\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\1\146\7\32\1\170\3\32\1\171"+
    "\2\32\1\172\13\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\5\32\1\173\25\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\1\32\1\174\15\32\1\175\13\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\30\32\2\0\5\32\1\176\25\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\30\32\2\0\5\32\1\177\14\32\1\200\10\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\4\32\1\201\11\32\1\202"+
    "\14\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\1\32\1\203"+
    "\31\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\16\32\1\204"+
    "\14\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\17\32\1\205"+
    "\13\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\22\32\1\206"+
    "\1\32\1\207\6\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\5\32\1\210\14\32\1\211\6\32\1\212\1\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\11\32\1\213\21\32\3\0"+
    "\2\32\124\0\1\214\3\0\2\72\1\3\1\72\1\4"+
    "\123\72\4\74\1\0\1\74\1\215\125\74\1\0\1\74"+
    "\1\75\4\100\7\74\1\100\1\74\3\216\5\74\1\100"+
    "\1\74\6\216\22\100\2\74\1\100\6\216\24\100\3\74"+
    "\2\100\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\6\74\1\101\1\100\1\74\3\77\5\74\1\100\1\74"+
    "\30\77\2\74\33\77\3\74\2\77\4\74\1\0\1\74"+
    "\1\75\4\100\7\74\1\100\1\74\3\100\5\74\1\100"+
    "\1\74\30\100\2\74\33\100\3\74\2\100\4\74\1\0"+
    "\1\74\1\220\1\74\1\101\10\74\1\101\2\74\3\101"+
    "\7\74\30\101\2\74\33\101\3\74\2\101\4\74\1\0"+
    "\1\74\1\221\1\100\1\77\1\222\1\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\20\105\1\224\12\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\221\1\100\1\77\1\222\1\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\103\5\74\1\100"+
    "\1\74\30\105\2\74\20\105\1\224\12\105\3\74\2\105"+
    "\4\74\1\0\1\74\1\217\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\22\105\1\225\10\105\3\74\2\105"+
    "\4\74\1\0\1\74\1\217\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\33\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\17\105\1\226\13\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\5\105\1\227\25\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\5\105\1\230\25\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\21\105\1\231\11\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\14\105\1\232\16\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\5\105\1\233\2\105\1\234\6\105\1\235\13\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\25\105\1\236\5\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\22\105\1\237\10\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\24\105\1\240\6\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\25\105\1\241\5\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\5\105\1\242\3\105"+
    "\1\243\21\105\3\74\2\105\4\74\1\0\1\74\1\217"+
    "\1\100\1\77\2\100\1\74\1\223\4\74\1\101\1\100"+
    "\1\74\3\105\5\74\1\100\1\74\30\105\2\74\1\105"+
    "\1\244\31\105\3\74\2\105\4\74\1\0\1\74\1\217"+
    "\1\100\1\77\2\100\1\74\1\223\4\74\1\101\1\100"+
    "\1\74\3\105\5\74\1\100\1\74\30\105\2\74\1\105"+
    "\1\245\23\105\1\246\5\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\14\105\1\247\16\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\25\105\1\250\5\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\1\105\1\251\3\105\1\252\3\105\1\253\5\105"+
    "\1\254\13\105\3\74\2\105\4\74\1\0\1\74\1\217"+
    "\1\100\1\77\2\100\1\74\1\223\4\74\1\101\1\100"+
    "\1\74\3\105\5\74\1\100\1\74\30\105\2\74\1\105"+
    "\1\255\7\105\1\256\21\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\5\105\1\257\25\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\10\105\1\260\22\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\5\105\1\261\25\105\3\74\2\105\13\0\1\262"+
    "\124\0\1\263\2\0\1\262\5\0\1\263\2\0\3\263"+
    "\7\0\30\263\2\0\33\263\3\0\2\263\6\0\5\7"+
    "\7\0\1\7\1\0\3\264\5\0\1\7\1\0\30\7"+
    "\2\0\33\7\3\0\1\7\1\264\21\0\1\265\212\0"+
    "\1\266\31\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\4\32\1\267\23\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\2\32\1\270\25\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\20\32\1\271\7\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\1\32\1\272\1\32\1\273\2\32\1\274"+
    "\1\275\1\276\2\32\1\277\2\32\1\300\1\301\1\32"+
    "\1\302\1\303\5\32\2\0\2\32\1\272\1\32\1\273"+
    "\2\32\1\274\1\275\1\276\2\32\1\277\2\32\1\300"+
    "\1\301\2\32\1\302\1\303\6\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\21\32\1\304\6\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\21\32\1\305\6\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\3\32\1\306\24\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\10\32\1\307\17\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\15\32\1\310\12\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\10\32\1\311\10\32\1\312\6\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\22\32\1\313\5\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\14\32\1\314\13\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\1\315\32\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\16\32\1\316\11\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\3\32\1\317\13\32\1\320\4\32\1\321\3\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\4\32\1\322\23\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\10\32\1\323\17\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\24\32"+
    "\1\324\6\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\3\32"+
    "\1\325\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\17\32"+
    "\1\326\13\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\1\32"+
    "\1\327\31\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\1\32"+
    "\1\330\31\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\14\32"+
    "\1\331\16\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\3\32"+
    "\1\332\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\14\32"+
    "\1\333\16\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\16\32"+
    "\1\334\14\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\24\32"+
    "\1\335\6\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\11\32"+
    "\1\336\21\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\5\32"+
    "\1\337\25\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\24\32"+
    "\1\340\6\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\15\32"+
    "\1\341\15\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\3\32"+
    "\1\342\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\27\32"+
    "\1\343\3\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\3\32"+
    "\1\344\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\22\32"+
    "\1\345\10\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\30\32"+
    "\1\346\2\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\25\32"+
    "\1\347\5\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\20\32"+
    "\1\350\12\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\4\32"+
    "\1\351\26\32\3\0\2\32\4\74\1\0\1\74\1\75"+
    "\4\100\7\74\1\100\1\74\3\352\5\74\1\100\1\74"+
    "\6\352\22\100\2\74\1\100\6\352\24\100\3\74\2\100"+
    "\4\74\1\0\1\74\1\353\4\100\7\74\1\100\1\74"+
    "\3\100\5\74\1\100\1\74\30\100\2\74\33\100\3\74"+
    "\2\100\4\74\1\0\1\74\1\215\6\74\1\354\116\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\30\105\1\355\2\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\11\105\1\356\21\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\25\105\1\357\5\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\16\105\1\360\14\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\22\105\1\361\10\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\25\105\1\362\5\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\1\105\1\363\23\105\1\364\5\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\16\105\1\365\14\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\5\105\1\366\25\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\14\105\1\367\16\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\3\105\1\370\27\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\1\105\1\371\3\105\1\372"+
    "\25\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\24\105\1\373"+
    "\6\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\23\105\1\374"+
    "\7\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\6\105\1\375"+
    "\24\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\15\105\1\364"+
    "\15\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\22\105\1\376"+
    "\10\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\26\105\1\371"+
    "\4\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\15\105\1\377"+
    "\15\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\11\105\1\u0100"+
    "\21\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\22\105\1\u0101"+
    "\10\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\4\105\1\u0102"+
    "\26\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\4\105\1\u0103"+
    "\26\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\7\105\1\u0104"+
    "\23\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\27\105\1\367"+
    "\3\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\16\105\1\u0105"+
    "\14\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\14\105\1\u0106"+
    "\16\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\1\105\1\u0107"+
    "\26\105\1\u0108\2\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\11\105\1\u0109\21\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\14\105\1\u010a\16\105\3\74\2\105\10\0\1\263\2\0"+
    "\1\u010b\5\0\1\263\2\0\3\263\7\0\30\263\2\0"+
    "\33\263\3\0\2\263\21\0\1\u010c\215\0\1\u010d\26\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\20\32\1\u010e\7\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\1\u010f\27\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\16\32"+
    "\1\u0110\1\32\1\u0111\2\32\1\u0112\4\32\2\0\17\32"+
    "\1\u0110\2\32\1\u0111\2\32\1\u0112\5\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\10\32\1\u0113\17\32\2\0\11\32\1\u0113\21\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\2\32\1\u0114\25\32\2\0\3\32"+
    "\1\u0114\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\1\32\1\u0115\1\32\5\0\1\7\1\0\4\32"+
    "\1\u0116\23\32\2\0\5\32\1\u0116\25\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\14\32\1\u0117\1\u0118\12\32\2\0\15\32\1\u0117"+
    "\1\u0118\14\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\10\32\1\u0119\17\32"+
    "\2\0\11\32\1\u0119\21\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\17\32"+
    "\1\u011a\10\32\2\0\20\32\1\u011a\12\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\2\32\1\u011b\1\32\1\u011c\12\32\1\u011d\10\32"+
    "\2\0\3\32\1\u011b\1\32\1\u011c\12\32\1\u011d\12\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\4\32\1\u011e\3\32\1\u011f\17\32"+
    "\2\0\5\32\1\u011e\3\32\1\u011f\21\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\2\32\1\u0120\25\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\4\32\1\u0121\23\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\22\32\1\u0122\5\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\22\32\1\u0123\5\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\22\32\1\u0124\5\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\4\32\1\u0125\23\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\10\32\1\u0126\6\32\1\u0127\10\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\1\u0128\32\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\13\32\1\u0129\14\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\2\32\1\u012a\25\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\10\32\1\u012b\17\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\4\32\1\u012c\23\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\4\32\1\u012d\23\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\15\32\1\u012e\12\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\13\32\1\u012f\14\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\13\32\1\u0130\17\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\14\32\1\u0131\16\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\22\32\1\u0132\10\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\23\32\1\u0133\7\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\17\32\1\u0134\3\32\1\u0135"+
    "\7\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\11\32\1\u0136"+
    "\21\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\23\32\1\u0137"+
    "\7\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\24\32\1\u0138"+
    "\6\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\4\32\1\u0139\23\32\2\0"+
    "\33\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\7\32\1\u013a"+
    "\23\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\6\32\1\u013b"+
    "\24\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\5\32\1\u013c"+
    "\25\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\5\32\1\u013d"+
    "\25\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\14\32\1\u013e"+
    "\16\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\23\32\1\u013f"+
    "\7\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\11\32\1\u0140"+
    "\21\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\24\32\1\u0141"+
    "\6\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\5\32\1\u0142"+
    "\25\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\5\32\1\u0143"+
    "\25\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\24\32\1\u0144"+
    "\6\32\3\0\2\32\4\74\1\0\1\74\1\75\4\100"+
    "\7\74\1\100\1\74\3\u0145\5\74\1\100\1\74\6\u0145"+
    "\22\100\2\74\1\100\6\u0145\24\100\3\74\2\100\4\74"+
    "\1\0\1\74\1\u0146\125\74\1\0\1\74\1\u0147\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\33\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\1\105\1\u0148\31\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\22\105\1\u0149\10\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\5\105\1\u014a\25\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\4\105\1\u014b\26\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\1\105\1\u0103\31\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\3\105\1\u014c\27\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\5\105\1\u0103\25\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\24\105\1\u014d\6\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\3\105\1\u014e\27\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\u014f\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\33\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\10\105\1\u0150\22\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\31\105\1\u0103\1\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\5\105\1\u0151\25\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\20\105\1\u0152\12\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\24\105\1\u0153\6\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\24\105\1\u0154\6\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\17\105\1\u0155\13\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\2\105\1\u0156\30\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\26\105\1\364\4\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\20\105\1\u0157\12\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\11\105\1\u0158\21\105\3\74\2\105\4\74"+
    "\1\0\1\74\1\u0159\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\5\74\1\100\1\74"+
    "\30\105\2\74\33\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\10\105\1\375\22\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\23\105\1\u015a\7\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\26\105\1\u015b\4\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\14\105\1\u0103\16\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\24\105\1\u015c\6\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\24\105\1\364\6\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\14\105\1\u015d\16\105\3\74\2\105\21\u010c\1\u015e\106\u010c"+
    "\72\0\1\u015f\43\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\22\32\1\u0160\5\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\2\32\1\u0161\25\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\3\32\1\u0162\24\32\2\0\4\32"+
    "\1\u0162\26\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\22\32\1\u0163\5\32"+
    "\2\0\24\32\1\u0163\6\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\24\32"+
    "\1\u0164\3\32\2\0\26\32\1\u0164\4\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\10\32\1\u0165\17\32\2\0\11\32\1\u0165\21\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\1\u0166\27\32\2\0\1\32\1\u0166"+
    "\31\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\6\32\1\u0167\21\32\2\0"+
    "\7\32\1\u0167\23\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\17\32\1\u0168"+
    "\10\32\2\0\20\32\1\u0168\12\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\15\32\1\u0169\12\32\2\0\16\32\1\u0169\14\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\22\32\1\u016a\5\32\2\0\24\32\1\u016a"+
    "\6\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\20\32\1\u016b\7\32\2\0"+
    "\22\32\1\u016b\10\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\13\32\1\u016c"+
    "\14\32\2\0\14\32\1\u016c\16\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\1\u016d\27\32\2\0\1\32\1\u016d\31\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\26\32\1\u016e\1\32\2\0\30\32\1\u016e\2\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\22\32\1\u016f\5\32\2\0\24\32"+
    "\1\u016f\6\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\10\32\1\u0170\17\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\20\32\1\u0171\7\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\14\32\1\u0172\13\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\1\u0173\27\32\2\0"+
    "\33\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\1\u0174\27\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\16\32\1\u0175\11\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\4\32\1\u0176\23\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\20\32\1\u0177\7\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\1\u0178\27\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\20\32\1\u0179\7\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\25\32\1\u017a\2\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\4\32\1\u017b\23\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\7\32\1\u017c\23\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\5\32\1\u017d\25\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\23\32\1\u017e\7\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\22\32\1\u017f\10\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\15\32\1\u0180\15\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\5\32\1\u0181\25\32\3\0"+
    "\2\32\6\0\5\7\6\0\1\u0182\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\14\32\1\u0183\16\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\10\32\1\u0184\22\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\7\32\1\u0185\23\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\11\32\1\u0186\21\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\16\32\1\u0187\14\32\3\0\2\32"+
    "\6\0\5\7\6\0\1\u0188\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\30\32\2\0\10\32\1\u0189\22\32\3\0\2\32\4\74"+
    "\1\0\1\74\1\u0159\4\100\7\74\1\100\1\74\3\u018a"+
    "\5\74\1\100\1\74\6\u018a\22\100\2\74\1\100\6\u018a"+
    "\24\100\3\74\2\100\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\14\105\1\u018b"+
    "\16\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\11\105\1\u018c"+
    "\21\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\26\105\1\u018d"+
    "\4\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\1\105\1\u018e"+
    "\31\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\13\105\1\u0103"+
    "\17\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\5\105\1\u018f"+
    "\25\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\13\105\1\u0190"+
    "\17\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\23\105\1\u0191"+
    "\7\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\16\105\1\u0103"+
    "\14\105\3\74\2\105\4\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\1\u0192\4\74\1\100\1\74\30\105\2\74\23\105"+
    "\1\u0193\7\105\3\74\2\105\4\74\1\0\1\74\1\217"+
    "\1\100\1\77\2\100\1\74\1\223\4\74\1\101\1\100"+
    "\1\74\3\105\5\74\1\100\1\74\30\105\2\74\11\105"+
    "\1\u0194\21\105\3\74\2\105\4\74\1\0\1\74\1\u0195"+
    "\1\100\1\77\2\100\1\74\1\223\4\74\1\101\1\100"+
    "\1\74\3\105\5\74\1\100\1\74\30\105\2\74\33\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\17\105\1\u0151\13\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\5\105\1\u0196\25\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\14\105\1\364\16\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\101\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\17\105\1\u015c\13\105"+
    "\3\74\2\105\4\74\1\0\1\74\1\217\1\100\1\77"+
    "\2\100\1\74\1\223\4\74\1\u0197\1\100\1\74\3\105"+
    "\5\74\1\100\1\74\30\105\2\74\33\105\3\74\2\105"+
    "\4\74\1\0\1\74\1\217\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\5\105\1\u0198\25\105\3\74\2\105"+
    "\4\74\1\0\1\74\1\u0199\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\33\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\17\105\1\u019a\13\105\3\74\2\105\21\u010c\1\u019b"+
    "\106\u010c\71\0\1\u019c\44\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\1\u019d\32\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\22\32\1\u019e\5\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\27\32\1\u019f\2\0\31\32\1\u019f"+
    "\1\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\22\32\1\u01a0\5\32\2\0"+
    "\24\32\1\u01a0\6\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\2\32\1\u01a1"+
    "\25\32\2\0\3\32\1\u01a1\27\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\3\32\1\u01a2\24\32\2\0\4\32\1\u01a2\26\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\23\32\1\u01a3\4\32\2\0\25\32\1\u01a3"+
    "\5\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\12\32\1\u01a4\15\32\2\0"+
    "\13\32\1\u01a4\17\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\10\32\1\u01a5"+
    "\17\32\2\0\11\32\1\u01a5\21\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\10\32\1\u01a6\17\32\2\0\11\32\1\u01a6\21\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\4\32\1\u01a7\23\32\2\0\5\32\1\u01a7"+
    "\25\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\14\32\1\u01a8\13\32\2\0"+
    "\15\32\1\u01a8\15\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\22\32\1\u01a9"+
    "\5\32\2\0\24\32\1\u01a9\6\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\13\32\1\u01aa\14\32\2\0\14\32\1\u01aa\16\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\13\32\1\u01ab\14\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\22\32\1\u01ac\5\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\17\32\1\u01ad\10\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\20\32\1\u01ae\7\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\13\32\1\u01af\14\32\2\0\33\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\1\u01b0\27\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\21\32\1\u01b1\6\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\4\32\1\u01b2\23\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\22\32\1\u01b3\5\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\21\32\1\u01b4\6\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\7\32\1\u01b5\20\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\22\32\1\u01b6\10\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\1\32\1\u01b7\31\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\1\32\1\u01b8\31\32\3\0\2\32"+
    "\76\0\1\u01b9\14\0\1\u01ba\22\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\5\32"+
    "\1\u01bb\25\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\24\32"+
    "\1\u01bc\6\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\5\32"+
    "\1\u01bd\25\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\3\32"+
    "\1\u01be\27\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\30\32\2\0\7\32"+
    "\1\u01bf\23\32\3\0\2\32\71\0\1\u01c0\36\0\4\74"+
    "\1\0\1\74\1\75\4\100\7\74\1\100\1\74\3\u01c1"+
    "\5\74\1\100\1\74\6\u01c1\22\100\2\74\1\100\6\u01c1"+
    "\24\100\3\74\2\100\4\74\1\0\1\74\1\u01c2\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\33\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\5\105\1\u01c3\25\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\1\105\1\u018b\31\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\16\105\1\u018d\14\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\22\105\1\u0154\10\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\2\105\1\u01c4\30\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\217\1\100\1\77\2\100"+
    "\1\74\1\223\4\74\1\101\1\100\1\74\3\105\5\74"+
    "\1\100\1\74\30\105\2\74\11\105\1\362\21\105\3\74"+
    "\2\105\4\74\1\0\1\74\1\215\14\74\1\u01c5\110\74"+
    "\1\0\1\74\1\217\1\100\1\77\2\100\1\74\1\223"+
    "\4\74\1\101\1\100\1\74\3\105\1\u0192\4\74\1\100"+
    "\1\74\30\105\2\74\33\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\6\105\1\u01c6\24\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\217\1\100\1\77\2\100\1\74\1\223\4\74"+
    "\1\101\1\100\1\74\3\105\5\74\1\100\1\74\30\105"+
    "\2\74\22\105\1\u015c\10\105\3\74\2\105\4\74\1\0"+
    "\1\74\1\220\1\74\1\101\10\74\1\101\2\74\3\101"+
    "\7\74\30\101\2\74\23\101\1\u01c7\7\101\3\74\2\101"+
    "\4\74\1\0\1\74\1\217\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\22\105\1\u0103\10\105\3\74\2\105"+
    "\4\74\1\0\1\74\1\217\1\100\1\77\2\100\1\74"+
    "\1\223\4\74\1\101\1\100\1\74\3\105\5\74\1\100"+
    "\1\74\30\105\2\74\27\105\1\u0103\3\105\3\74\2\105"+
    "\21\u010c\1\u019b\11\u010c\1\3\74\u010c\104\0\1\u01c8\31\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\10\32\1\u01c9\17\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\4\32\1\u01ca\23\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\16\32\1\u01cb\11\32\2\0\17\32\1\u01cb\13\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\22\32\1\u01cc\5\32\2\0\24\32\1\u01cc"+
    "\6\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\16\32\1\u01cd\11\32\2\0"+
    "\17\32\1\u01cd\13\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\17\32\1\u01ce"+
    "\10\32\2\0\20\32\1\u01ce\12\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\2\32\1\u01cf\25\32\2\0\3\32\1\u01cf\27\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\1\u01d0\27\32\2\0\1\32\1\u01d0\31\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\4\32\1\u01d1\23\32\2\0\5\32"+
    "\1\u01d1\25\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\1\u01d2\27\32\2\0"+
    "\33\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\30\32\2\0\1\u01d3\32\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\4\32\1\u01d4\23\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\3\32\1\u01d5\24\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\21\32\1\u01d6\6\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\2\32\1\u01d7\25\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\4\32\1\u01d8\23\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\10\32\1\u01d9\17\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\17\32\1\u01da\13\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\16\32\1\u01db\14\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\14\32\1\u01dc\16\32"+
    "\3\0\2\32\71\0\1\u01dd\137\0\1\u01de\34\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\15\32\1\u01df\15\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\22\32\1\u01e0\10\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\13\32\1\u01e1\17\32\3\0\2\32\104\0\1\u01e2"+
    "\23\0\4\74\1\0\1\74\1\75\4\100\7\74\1\100"+
    "\1\74\3\u01e3\5\74\1\100\1\74\6\u01e3\22\100\2\74"+
    "\1\100\6\u01e3\24\100\3\74\2\100\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\22\105\1\u018b\10\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\17\105\1\u01e4\13\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\215\14\74\1\u01e5\110\74\1\0\1\74\1\217\1\100"+
    "\1\77\2\100\1\74\1\223\4\74\1\101\1\100\1\74"+
    "\3\105\5\74\1\100\1\74\30\105\2\74\31\105\1\u0154"+
    "\1\105\3\74\2\105\4\74\1\0\1\74\1\220\1\74"+
    "\1\101\10\74\1\101\2\74\3\101\7\74\30\101\2\74"+
    "\5\101\1\u01e6\25\101\3\74\2\101\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\15\32\1\u01e7"+
    "\12\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\20\32\1\u01e8"+
    "\7\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\15\32\1\u01e9"+
    "\12\32\2\0\16\32\1\u01e9\14\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\15\32\1\u01ea\12\32\2\0\16\32\1\u01ea\14\32\3\0"+
    "\2\32\6\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\22\32\1\u01eb\5\32\2\0\24\32\1\u01eb"+
    "\6\32\3\0\2\32\6\0\5\7\7\0\1\7\1\0"+
    "\3\32\5\0\1\7\1\0\22\32\1\u01ec\5\32\2\0"+
    "\24\32\1\u01ec\6\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\20\32\1\u01ed"+
    "\7\32\2\0\22\32\1\u01ed\10\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\20\32\1\u01ee\7\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\15\32\1\u01ef\12\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\1\u01f0\27\32\2\0\33\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\30\32"+
    "\2\0\1\u01f1\32\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\22\32\1\u01f2"+
    "\5\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\13\32\1\u01f3"+
    "\14\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\25\32\1\u01f4\5\32\3\0\2\32\105\0\1\u01f5\144\0"+
    "\1\u01f6\13\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\5\32\1\u01f7\25\32\3\0"+
    "\2\32\101\0\1\u01f8\26\0\4\74\1\0\1\74\1\u0159"+
    "\4\100\7\74\1\100\1\74\3\100\5\74\1\100\1\74"+
    "\30\100\2\74\33\100\3\74\2\100\4\74\1\0\1\74"+
    "\1\217\1\100\1\77\2\100\1\74\1\223\4\74\1\101"+
    "\1\100\1\74\3\105\5\74\1\100\1\74\30\105\2\74"+
    "\30\105\1\u015c\2\105\3\74\2\105\4\74\1\0\1\74"+
    "\1\215\12\74\2\u01f9\1\74\3\u01f9\7\74\30\u01f9\2\74"+
    "\33\u01f9\3\74\2\u01f9\4\74\1\0\1\74\1\220\1\74"+
    "\1\101\10\74\1\101\2\74\3\101\7\74\30\101\2\74"+
    "\22\101\1\u01fa\10\101\3\74\2\101\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\5\32\1\u01fb"+
    "\22\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\1\u01fc\32\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\10\32\1\u01fd\17\32"+
    "\2\0\11\32\1\u01fd\21\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\4\32"+
    "\1\u01fe\23\32\2\0\5\32\1\u01fe\25\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\1\u01ff\32\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\23\32\1\u0200\4\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\22\32\1\u0201\5\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\u0202\5\0\1\7\1\0"+
    "\30\u0202\2\0\33\u0202\3\0\2\u0202\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\4\32\1\u0203"+
    "\23\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\30\32\2\0"+
    "\16\32\1\u0204\14\32\3\0\2\32\101\0\1\u0205\123\0"+
    "\1\u0206\40\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\16\32\1\u0207\14\32\3\0"+
    "\2\32\77\0\1\u0208\30\0\4\74\1\0\1\74\1\215"+
    "\12\74\1\u01f9\1\u0209\1\74\3\u01f9\7\74\30\u01f9\2\74"+
    "\33\u01f9\3\74\2\u01f9\4\74\1\0\1\74\1\220\1\74"+
    "\1\101\10\74\1\101\2\74\3\101\7\74\30\101\2\74"+
    "\11\101\1\u020a\21\101\3\74\2\101\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\16\32\1\u020b"+
    "\11\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\1\u020c\27\32"+
    "\2\0\33\32\3\0\2\32\6\0\5\7\7\0\1\7"+
    "\1\0\3\32\5\0\1\7\1\0\15\32\1\u020d\12\32"+
    "\2\0\16\32\1\u020d\14\32\3\0\2\32\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\1\u020e"+
    "\27\32\2\0\1\32\1\u020e\31\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\15\32\1\u020f\12\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\14\32\1\u0210\13\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\16\32\1\u0211\11\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\30\32\2\0\4\32\1\u0212\26\32\3\0\2\32\104\0"+
    "\1\u0213\31\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\30\32\2\0\24\32\1\u0214\6\32\3\0"+
    "\2\32\106\0\1\u0215\21\0\4\74\1\0\1\74\1\215"+
    "\12\74\1\u01f9\1\u0209\1\74\3\u0216\7\74\30\u0216\2\74"+
    "\33\u0216\3\74\2\u0216\4\74\1\0\1\74\1\220\1\74"+
    "\1\101\10\74\1\101\2\74\3\101\7\74\30\101\2\74"+
    "\6\101\1\u0217\24\101\3\74\2\101\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\13\32\1\u0218"+
    "\14\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\6\32\1\u0219"+
    "\21\32\2\0\7\32\1\u0219\23\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\23\32\1\u021a\4\32\2\0\33\32\3\0\2\32\6\0"+
    "\5\7\7\0\1\7\1\0\3\32\5\0\1\7\1\0"+
    "\20\32\1\u021b\7\32\2\0\33\32\3\0\2\32\121\0"+
    "\1\u021c\14\0\5\7\7\0\1\7\1\0\3\32\5\0"+
    "\1\7\1\0\1\32\1\u021d\26\32\2\0\33\32\3\0"+
    "\2\32\4\74\1\0\1\74\1\215\12\74\1\u01f9\1\u0209"+
    "\1\74\3\u021e\7\74\30\u021e\2\74\33\u021e\3\74\2\u021e"+
    "\4\74\1\0\1\74\1\u021f\1\74\1\101\10\74\1\101"+
    "\2\74\3\101\7\74\30\101\2\74\33\101\3\74\2\101"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\4\32\1\u0220\23\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\14\32\1\u0221\13\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\10\32\1\u0222\17\32\2\0\33\32\3\0\2\32"+
    "\6\0\5\7\7\0\1\7\1\0\3\32\5\0\1\7"+
    "\1\0\30\32\2\0\31\32\1\u0223\1\32\3\0\2\32"+
    "\1\u021e\3\74\1\0\1\u021e\1\u0224\121\u021e\6\0\5\7"+
    "\7\0\1\7\1\0\3\32\5\0\1\7\1\0\1\u0225"+
    "\27\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\16\32\1\u0226"+
    "\11\32\2\0\33\32\3\0\2\32\6\0\5\7\7\0"+
    "\1\7\1\0\3\32\5\0\1\7\1\0\10\32\1\u0227"+
    "\17\32\2\0\33\32\3\0\2\32\1\u0228\4\0\1\u0228"+
    "\1\u0224\121\u0228\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\22\32\1\u0229\5\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\30\32\2\0\4\32\1\u022a\26\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\16\32\1\u022b\11\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\20\32\1\u022c\7\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\10\32\1\u022d\17\32\2\0\33\32"+
    "\3\0\2\32\6\0\5\7\7\0\1\7\1\0\3\32"+
    "\5\0\1\7\1\0\16\32\1\u022e\11\32\2\0\33\32"+
    "\3\0\2\32";

  private static int [] zzUnpackTrans() {
    int [] result = new int[40128];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\6\1\7\11\2\1\2\11\22\1\2\11"+
    "\16\1\1\11\1\1\1\11\1\1\1\11\1\0\4\1"+
    "\1\0\31\1\2\0\1\1\1\0\3\11\1\0\51\1"+
    "\2\11\2\1\1\11\2\1\1\0\36\1\1\11\1\0"+
    "\1\1\2\0\65\1\1\0\36\1\1\11\2\0\70\1"+
    "\1\11\27\1\2\0\42\1\1\0\5\1\1\0\11\1"+
    "\1\0\4\1\1\0\3\1\2\0\34\1\2\0\5\1"+
    "\1\0\4\1\1\0\1\1\1\0\1\11\24\1\2\0"+
    "\3\1\1\0\2\1\2\0\16\1\2\0\1\1\3\0"+
    "\12\1\1\0\1\11\1\1\3\0\10\1\1\0\1\1"+
    "\1\11\2\0\4\1\1\11\1\1\1\0\1\11\10\1"+
    "\1\0\6\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[558];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
		private Symbol symbol(int type) {
			return new Symbol(type, yyline + 1, yycolumn + 1, new Token(type, yyline + 1, yycolumn + 1));
			// return new Symbol(type, yyline + 1, yycolumn + 1);
		}

		private Symbol symbol(int type, Object object) {
			return new Symbol(type, yyline + 1, yycolumn + 1, new Token(type, (String) object, yyline + 1, yycolumn + 1));
			// return new Symbol(type, yyline + 1, yycolumn + 1, object);
		}

		private String getString(String str) {
			return str.substring(1, str.length() - 1);
		}


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public CaptchaLex(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { 	return symbol(EOF);
 }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { System.out.println("Error: < " + yytext() + " >");
	return symbol(ERROR, yytext());
	// throw new Error("Ilegal character: <" + yytext() + ">");
            }
            // fall through
          case 110: break;
          case 2:
            { /* Ignore */
            }
            // fall through
          case 111: break;
          case 3:
            { return symbol(NOT, yytext());
            }
            // fall through
          case 112: break;
          case 4:
            { return symbol(IN, yytext());
            }
            // fall through
          case 113: break;
          case 5:
            { return symbol(QS, yytext());
            }
            // fall through
          case 114: break;
          case 6:
            { return symbol(LPAREN, yytext());
            }
            // fall through
          case 115: break;
          case 7:
            { return symbol(RPAREN, yytext());
            }
            // fall through
          case 116: break;
          case 8:
            { return symbol(TIMES, yytext());
            }
            // fall through
          case 117: break;
          case 9:
            { return symbol(PLUS, yytext());
            }
            // fall through
          case 118: break;
          case 10:
            { return symbol(COMMA, yytext());
            }
            // fall through
          case 119: break;
          case 11:
            { return symbol(MINUS, yytext());
            }
            // fall through
          case 120: break;
          case 12:
            { return symbol(DIVIDE, yytext());
            }
            // fall through
          case 121: break;
          case 13:
            { return symbol(INTEGER, yytext());
            }
            // fall through
          case 122: break;
          case 14:
            { return symbol(COLON, yytext());
            }
            // fall through
          case 123: break;
          case 15:
            { return symbol(SEMI, yytext());
            }
            // fall through
          case 124: break;
          case 16:
            { return symbol(SMALLER, yytext());
            }
            // fall through
          case 125: break;
          case 17:
            { return symbol(EQUAL, yytext());
            }
            // fall through
          case 126: break;
          case 18:
            { return symbol(GREATER, yytext());
            }
            // fall through
          case 127: break;
          case 19:
            { return symbol(ID_V, yytext());
            }
            // fall through
          case 128: break;
          case 20:
            { return symbol(LBRACKET, yytext());
            }
            // fall through
          case 129: break;
          case 21:
            { return symbol(RBRACKET, yytext());
            }
            // fall through
          case 130: break;
          case 22:
            { return symbol(LBRACE, yytext());
            }
            // fall through
          case 131: break;
          case 23:
            { return symbol(RBRACE, yytext());
            }
            // fall through
          case 132: break;
          case 24:
            { return symbol(NEQ, yytext());
            }
            // fall through
          case 133: break;
          case 25:
            { return symbol(STRING, getString(yytext()));
            }
            // fall through
          case 134: break;
          case 26:
            { return symbol(AND, yytext());
            }
            // fall through
          case 135: break;
          case 27:
            { return symbol(SMLLREQ, yytext());
            }
            // fall through
          case 136: break;
          case 28:
            { return symbol(EQEQ, yytext());
            }
            // fall through
          case 137: break;
          case 29:
            { return symbol(GRTREQ, yytext());
            }
            // fall through
          case 138: break;
          case 30:
            { return symbol(IF, yytext());
            }
            // fall through
          case 139: break;
          case 31:
            { return symbol(ID, yytext());
            }
            // fall through
          case 140: break;
          case 32:
            { return symbol(OR, yytext());
            }
            // fall through
          case 141: break;
          case 33:
            { return symbol(ID_, getString(yytext()));
            }
            // fall through
          case 142: break;
          case 34:
            { return symbol(INTQ, getString(yytext()));
            }
            // fall through
          case 143: break;
          case 35:
            { return symbol(CHAR, getString(yytext()));
            }
            // fall through
          case 144: break;
          case 36:
            { return symbol(DECIMAL, yytext());
            }
            // fall through
          case 145: break;
          case 37:
            { return symbol(ASC, yytext());
            }
            // fall through
          case 146: break;
          case 38:
            { return symbol(PARAGRAPH, yytext());
            }
            // fall through
          case 147: break;
          case 39:
            { return symbol(END, yytext());
            }
            // fall through
          case 148: break;
          case 40:
            { return symbol(ALT, yytext());
            }
            // fall through
          case 149: break;
          case 41:
            { return symbol(SRC, yytext());
            }
            // fall through
          case 150: break;
          case 42:
            { return symbol(PERCNTG, getString(yytext()));
            }
            // fall through
          case 151: break;
          case 43:
            { return symbol(ID_2, getString(yytext()));
            }
            // fall through
          case 152: break;
          case 44:
            { return symbol(BR, yytext());
            }
            // fall through
          case 153: break;
          case 45:
            { return symbol(H1, yytext());
            }
            // fall through
          case 154: break;
          case 46:
            { return symbol(DESC, yytext());
            }
            // fall through
          case 155: break;
          case 47:
            { return symbol(ELSE, yytext());
            }
            // fall through
          case 156: break;
          case 48:
            { return symbol(EXIT, yytext());
            }
            // fall through
          case 157: break;
          case 49:
            { return symbol(INIT, yytext());
            }
            // fall through
          case 158: break;
          case 50:
            { return symbol(THEN, yytext());
            }
            // fall through
          case 159: break;
          case 51:
            { return symbol(CHR, yytext());
            }
            // fall through
          case 160: break;
          case 52:
            { return symbol(COLS, yytext());
            }
            // fall through
          case 161: break;
          case 53:
            { return symbol(HREF, yytext());
            }
            // fall through
          case 162: break;
          case 54:
            { return symbol(NAME, yytext());
            }
            // fall through
          case 163: break;
          case 55:
            { return symbol(ROWS, yytext());
            }
            // fall through
          case 164: break;
          case 56:
            { return symbol(TRUE, yytext());
            }
            // fall through
          case 165: break;
          case 57:
            { return symbol(TYPE, yytext());
            }
            // fall through
          case 166: break;
          case 58:
            { return symbol(ONCLICK, getString(yytext()));
            }
            // fall through
          case 167: break;
          case 59:
            { return symbol(PIXEL, getString(yytext()));
            }
            // fall through
          case 168: break;
          case 60:
            { return symbol(CLASS_VALUE, getString(yytext()));
            }
            // fall through
          case 169: break;
          case 61:
            { return symbol(COLOUR, getString(yytext()));
            }
            // fall through
          case 170: break;
          case 62:
            { return symbol(DIV, yytext());
            }
            // fall through
          case 171: break;
          case 63:
            { return symbol(IMG, yytext());
            }
            // fall through
          case 172: break;
          case 64:
            { return symbol(WHILE, yytext());
            }
            // fall through
          case 173: break;
          case 65:
            { return symbol(CLASS, yytext());
            }
            // fall through
          case 174: break;
          case 66:
            { return symbol(COLOR, yytext());
            }
            // fall through
          case 175: break;
          case 67:
            { return symbol(FALSE, yytext());
            }
            // fall through
          case 176: break;
          case 68:
            { return symbol(WIDTH, yytext());
            }
            // fall through
          case 177: break;
          case 69:
            { return symbol(ALIGN_VALUE, getString(yytext()));
            }
            // fall through
          case 178: break;
          case 70:
            { return symbol(TYPE_VALUE, getString(yytext()));
            }
            // fall through
          case 179: break;
          case 71:
            { return symbol(BODY, yytext());
            }
            // fall through
          case 180: break;
          case 72:
            { return symbol(GCIC, yytext());
            }
            // fall through
          case 181: break;
          case 73:
            { return symbol(HEAD, yytext());
            }
            // fall through
          case 182: break;
          case 74:
            { return symbol(LINK, yytext());
            }
            // fall through
          case 183: break;
          case 75:
            { return symbol(SPAM, yytext());
            }
            // fall through
          case 184: break;
          case 76:
            { return symbol(UNTIL, yytext());
            }
            // fall through
          case 185: break;
          case 77:
            { return symbol(INSERT, yytext());
            }
            // fall through
          case 186: break;
          case 78:
            { return symbol(REPEAT, yytext());
            }
            // fall through
          case 187: break;
          case 79:
            { return symbol(HEIGHT, yytext());
            }
            // fall through
          case 188: break;
          case 80:
            { return symbol(STR, yytext());
            }
            // fall through
          case 189: break;
          case 81:
            { return symbol(FONTF_VALUE, getString(yytext()));
            }
            // fall through
          case 190: break;
          case 82:
            { return symbol(GLOBAL, yytext());
            }
            // fall through
          case 191: break;
          case 83:
            { return symbol(INPUT, yytext());
            }
            // fall through
          case 192: break;
          case 84:
            { return symbol(TITLE, yytext());
            }
            // fall through
          case 193: break;
          case 85:
            { return symbol(ON_LOAD, yytext());
            }
            // fall through
          case 194: break;
          case 86:
            { return symbol(REVERSE, yytext());
            }
            // fall through
          case 195: break;
          case 87:
            { return symbol(BOOL, yytext());
            }
            // fall through
          case 196: break;
          case 88:
            { return symbol(DEC, yytext());
            }
            // fall through
          case 197: break;
          case 89:
            { return symbol(INT, yytext());
            }
            // fall through
          case 198: break;
          case 90:
            { return symbol(CLICK, yytext());
            }
            // fall through
          case 199: break;
          case 91:
            { return symbol(BUTTON, yytext());
            }
            // fall through
          case 200: break;
          case 92:
            { return symbol(OPTION, yytext());
            }
            // fall through
          case 201: break;
          case 93:
            { return symbol(SELECT, yytext());
            }
            // fall through
          case 202: break;
          case 94:
            { return symbol(REDIRECT, yytext());
            }
            // fall through
          case 203: break;
          case 95:
            { return symbol(PROCESS, yytext());
            }
            // fall through
          case 204: break;
          case 96:
            { return symbol(THEN_WHILE, yytext());
            }
            // fall through
          case 205: break;
          case 97:
            { return symbol(FONTS, yytext());
            }
            // fall through
          case 206: break;
          case 98:
            { return symbol(ALERT, yytext());
            }
            // fall through
          case 207: break;
          case 99:
            { return symbol(TXTAREA, yytext());
            }
            // fall through
          case 208: break;
          case 100:
            { return symbol(LETPAR, yytext());
            }
            // fall through
          case 209: break;
          case 101:
            { return symbol(BCKGRND, yytext());
            }
            // fall through
          case 210: break;
          case 102:
            { return symbol(ALIGN, yytext());
            }
            // fall through
          case 211: break;
          case 103:
            { return symbol(SCRIPT, yytext());
            }
            // fall through
          case 212: break;
          case 104:
            { return symbol(FONTF, yytext());
            }
            // fall through
          case 213: break;
          case 105:
            { return symbol(LETIMPAR, yytext());
            }
            // fall through
          case 214: break;
          case 106:
            { return symbol(URL, getString(yytext()));
            }
            // fall through
          case 215: break;
          case 107:
            { return symbol(RANDOM_N, yytext());
            }
            // fall through
          case 216: break;
          case 108:
            { return symbol(GET, yytext());
            }
            // fall through
          case 217: break;
          case 109:
            { return symbol(RANDOM_C, yytext());
            }
            // fall through
          case 218: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
