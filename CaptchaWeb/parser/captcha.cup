package com.cesar31.captchaweb.parser;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.List;

class CaptchaParser;

parser code {:

	private Symbol cur_token;

	public CaptchaParser(CaptchaLex lex) {
		super(lex);
	}

	public void syntax_error(Symbol cur_token) {
		this.cur_token = cur_token;

		List<String> expected = new ArrayList<>();
		List<Integer> tokens = expected_token_ids();

		System.out.printf("Se encontro: %s, linea %d columna %d, se esperaba -> ", cur_token.value, cur_token.left, cur_token.right);
		for(Integer i : tokens) {
			expected.add(symbl_name_from_id(i));
			System.out.printf("%s, ", symbl_name_from_id(i));
		}
		System.out.println("");
	}

	protected int error_sync_size() {
		return 1;
	}

:}


terminal GCIC, HEAD, TITLE, LINK, BODY, SPAM, INPUT, TXTAREA, SELECT, OPTION, DIV, IMG, BR, BUTTON, H1, PARAGRAPH, SCRIPT, HREF, BCKGRND, COLOR, FONTS;
terminal FONTF, ALIGN, ALING_VALUE, TYPE, ID, NAME, COLS, ROW, CLASS, SRC, WIDTH, HEIGHT, ALT, CLICK, INTEGER, DECIMAL, BOOL, TRUE, FALSE;
terminal CHAR, STR, ASC, DESC, LETPAR, LETIMPAR, REVERSE, RANDOM_C, RANDOM_N, ALERT, EXIT, GLOBAL, HEX, COLOUR, INTQ, PIXEL, PERCENTG, ID_, INT, DEC;
terminal GREATER, SMALLER, LBRACE, RBRACE, LBRACKET, RBRACKET, COLON, SEMI, EQEQ, NEQ, GRTREQ, SMLLREQ, OR, AND, NOT, PLUS, MINUS, TIMES, DIVIDE;
terminal URL, LPAREN, RPAREN, EQUAL, STRING, PERCNTG, ROWS, FONTF_VALUE, QUOTE, ERROR;
terminal TYPE_VALUE, ALIGN_VALUE, CLASS_VALUE;

non terminal id, name, opt, optB, clgcic, makeOptB, gcic;
non terminal params, head, title, link, bckgrnd_clr, font_size, font_family;
non terminal text_align, type, cls_rws, cols_rows, clss, url, href_src, width_height, w_h, pxl_per;

non terminal String color;

/* Etiqueta de apertura <C_GCIC> */
gcic ::=
				SMALLER GCIC params GREATER
				| error GCIC params GREATER
				| SMALLER error params GREATER
				// | SMALLER GCIC error GREATER
				| SMALLER GCIC params error
				;

/* <C_HEAD> */
head ::=
				SMALLER HEAD GREATER
				| error HEAD GREATER
				| SMALLER error GREATER
				| SMALLER HEAD error
				;

/* <C_TITLE> */
title ::=
				SMALLER TITLE GREATER
				| error TITLE GREATER
				| SMALLER error GREATER
				| SMALLER TITLE error
				;

/* <C_LINK> */
link ::=
				SMALLER LINK params GREATER
				;

params ::=
				makeOptB
				|
				;

makeOptB ::=
				makeOptB optB
				| optB
				;

optB ::=
				LBRACKET opt RBRACKET
				// | error opt RBRACKET
				| LBRACKET opt error
				;

opt ::=
				id
				| name
				| href_src
				| bckgrnd_clr
				| font_size
				| font_family
				| text_align
				| type
				| cols_rows
				| clss
				| width_height
				| error
				;

id ::=
				ID EQUAL ID_:s
				{: System.out.println("id = " + s); :}
				| error EQUAL ID_
				| ID error ID_
				| ID EQUAL error
				;

name ::=
				NAME EQUAL STRING:s
				{: System.out.println("name = " + s); :}
				| error EQUAL STRING
				| NAME error STRING
				| NAME EQUAL error
				;

/* href/src */
href_src ::=
				url EQUAL URL:s
				| error EQUAL URL
				| url error URL
				| url EQUAL error
				;

url ::=
				HREF
				| SRC
				;

/* background / color */
bckgrnd_clr ::=
				color EQUAL COLOUR
				| error EQUAL COLOUR
				| color error COLOUR
				| color EQUAL error
				;

/* background / color */
color ::=
				BCKGRND
					{: RESULT = "background"; :}
				| COLOR
					{: RESULT = "color"; :}
				;

font_size ::=
				FONTS EQUAL PIXEL
				// | error EQUAL PIXEL
				| FONTS error PIXEL
				| FONTS EQUAL error
				;

font_family ::=
				FONTF EQUAL FONTF_VALUE
				| error EQUAL FONTF_VALUE
				| FONTF error FONTF_VALUE
				| FONTF EQUAL error
				;

text_align ::=
				ALIGN EQUAL ALIGN_VALUE
				| error EQUAL ALIGN_VALUE
				| ALIGN error ALIGN_VALUE
				| ALIGN EQUAL error
				;

/* type for inputs */
type ::=
				TYPE EQUAL TYPE_VALUE
				| error EQUAL TYPE_VALUE
				| TYPE error TYPE_VALUE
				| TYPE EQUAL error
				;

cols_rows ::=
				cls_rws EQUAL INTQ
				| error EQUAL INTQ
				| cls_rws error INTQ
				| cls_rws EQUAL error
				;

cls_rws ::=
				COLS
				| ROWS
				;

clss ::=
				CLASS EQUAL CLASS_VALUE
				| error EQUAL CLASS_VALUE
				| CLASS error CLASS_VALUE
				| CLASS EQUAL error
				;

/* width/height */
width_height ::=
				w_h EQUAL pxl_per
				| error EQUAL pxl_per
				| w_h error pxl_per
				| w_h EQUAL error
				;

w_h ::=
				WIDTH
				| HEIGHT
				;

pxl_per ::=
				PIXEL
				| PERCNTG
				;

/* Cierre etiqueta </C_GCIC> */
clgcic ::=
				SMALLER DIVIDE GCIC GREATER
				| error DIVIDE GCIC GREATER
				| SMALLER error GCIC GREATER
				| SMALLER DIVIDE error GREATER
				| SMALLER DIVIDE GCIC error
				;
